shiny::runApp()
# Set chunks
knitr::opts_chunk$set(include = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
# Load libraries
packages <-
c(
"tidyverse",
"janitor",
"dplyr",
"stargazer",
"ggplot2",
"ggrepel",
"readxl",
"lubridate",
"knitr",
"haven",
"tidyr",
"stargazer",
"qmd",
"grid",
"scales",
"stringr"
)
pacman::p_load(packages,
character.only = TRUE,
dependencies = TRUE)
#| message: false
## Read in the dataset
childcare_costs <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-09/childcare_costs.csv')
counties <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-09/counties.csv')
## Select the variables related to unemployment rate and year
unemp_vars <- childcare_costs %>%
select(county_fips_code, study_year, contains('unr'))
## Clean the data
tidy_unemp <- unemp_vars %>%
pivot_longer(
cols = !(county_fips_code | study_year),
names_to = c("gender", "age_category"),
names_sep = "_",
values_to = "rate"
) %>%
# Recode the gender values
mutate(
gender = recode(
gender, unr = "Overall", funr = "Female", munr = "Male"
),
age_category = recode(
age_category, `16` = "16 and over", `20to64` = "20 to 64"
)
)
## Append state name
tidy_unemp_state <- tidy_unemp %>%
inner_join(counties) %>%
select(-c(county_name, state_abbreviation))
vec_avg_by_gender <- tidy_unemp_state %>%
group_by(study_year, gender) %>%
summarize(gender_avg_unem = mean(rate))
write_csv(vec_avg_by_gender, 'vec_avg_by_gender.csv')
runApp()
# Set chunks
knitr::opts_chunk$set(include = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
# Load libraries
packages <-
c(
"tidyverse",
"janitor",
"dplyr",
"stargazer",
"ggplot2",
"ggrepel",
"readxl",
"lubridate",
"knitr",
"haven",
"tidyr",
"stargazer",
"qmd",
"grid",
"scales",
"stringr"
)
pacman::p_load(packages,
character.only = TRUE,
dependencies = TRUE)
#| message: false
## Read in the dataset
childcare_costs <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-09/childcare_costs.csv')
counties <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-09/counties.csv')
## Select the variables related to unemployment rate and year
unemp_vars <- childcare_costs %>%
select(county_fips_code, study_year, contains('unr'))
## Clean the data
tidy_unemp <- unemp_vars %>%
pivot_longer(
cols = !(county_fips_code | study_year),
names_to = c("gender", "age_category"),
names_sep = "_",
values_to = "rate"
) %>%
# Recode the gender values
mutate(
gender = recode(
gender, unr = "Overall", funr = "Female", munr = "Male"
),
age_category = recode(
age_category, `16` = "16 and over", `20to64` = "20 to 64"
)
)
## Append state name
tidy_unemp_state <- tidy_unemp %>%
inner_join(counties) %>%
select(-c(county_name, state_abbreviation))
vec_avg_by_gender <- tidy_unemp_state %>%
group_by(study_year, gender) %>%
summarize(gender_avg_unem = mean(rate))
write_csv(vec_avg_by_gender, 'vec_avg_by_gender.csv')
write_csv(vec_avg_by_gender, 'Documents/2023Fall/Data_Visualizaiton/Final_Project/Unemployment/vec_avg_by_gender.csv')
write_csv(vec_avg_by_gender, 'Document/2023Fall/Data_Visualizaiton/Final_Project/Unemployment/vec_avg_by_gender.csv')
write_csv(vec_avg_by_gender, 'Documents/2023Fall/Data_Visualizaiton/Final_Project/Unemployment/vec_avg_by_gender.csv')
write_csv(vec_avg_by_gender, 'Documents/2023Fall/Data_Visualizaiton/Final_Project/vec_avg_by_gender.csv')
# Set chunks
knitr::opts_chunk$set(include = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
# Load libraries
packages <-
c(
"tidyverse",
"janitor",
"dplyr",
"stargazer",
"ggplot2",
"ggrepel",
"readxl",
"lubridate",
"knitr",
"haven",
"tidyr",
"stargazer",
"qmd",
"grid",
"scales",
"stringr",
"sf",
"tmap",
"viridis"
)
pacman::p_load(packages,
character.only = TRUE,
dependencies = TRUE)
tmap_mode("plot")
#| message: false
## Read in the dataset
childcare_costs <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-09/childcare_costs.csv')
counties <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-09/counties.csv')
# state level shapefiles (see function documentation to customize)
st_shape <- tigris::states()
# county level shapefiles (see function documentation to customize)
county_shape <- tigris::counties(
# state = [FIPS code of state that you want as a string, or vector of #state codes]
)
## Select the variables related to unemployment rate and year
unemp_vars <- childcare_costs %>%
select(county_fips_code, study_year, contains('unr'))
## Clean the data
tidy_unemp <- unemp_vars %>%
pivot_longer(
cols = !(county_fips_code | study_year),
names_to = c("gender", "age_category"),
names_sep = "_",
values_to = "rate"
) %>%
# Recode the gender values
mutate(
gender = recode(
gender, unr = "Overall", funr = "Female", munr = "Male"
),
age_category = recode(
age_category, `16` = "16 and over", `20to64` = "20 to 64"
)
)
## Append state name
tidy_unemp_state <- tidy_unemp %>%
inner_join(counties) %>%
select(-c(county_name, state_abbreviation))
vec_avg_by_gender_age <- tidy_unemp_state %>%
group_by(study_year, gender, age_category) %>%
summarize(gender_age_avg_unem = mean(rate))
unem_by_gender <- vec_avg_by_gender_age %>%
# group by study_year and age_category
group_by(study_year, age_category) %>%
# calculate the unem gap between genders
summarize(
unem_gap_gender = gender_age_avg_unem[gender == "Male"] - gender_age_avg_unem[gender == "Female"]
)
write_csv(vec_avg_by_gender_age, 'Unemployment/vec_avg_by_gender_age.csv')
## Filter to get state names
st_tibble <- st_shape %>%
set_names(
names(.) %>%
tolower()
) %>%
as_tibble() %>%
select(statefp, name) %>%
rename('state_name' = 'name')
## Append state names to County level data
county_shape_clean <- county_shape %>%
set_names(
names(.) %>%
tolower()
) %>%
left_join(st_tibble,
by = 'statefp')
## Merge the county_shape_clean to tidy_unemp_state
county_unemp_gap <- county_unemp_gap %>%
merge(county_shape_clean, by = "geoid") %>%
rename("State_Name" = "state_name.x")
# Set chunks
knitr::opts_chunk$set(include = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
# Load libraries
packages <-
c(
"tidyverse",
"janitor",
"dplyr",
"stargazer",
"ggplot2",
"ggrepel",
"readxl",
"lubridate",
"knitr",
"haven",
"tidyr",
"stargazer",
"qmd",
"grid",
"scales",
"stringr",
"sf",
"tmap",
"viridis"
)
pacman::p_load(packages,
character.only = TRUE,
dependencies = TRUE)
tmap_mode("plot")
#| message: false
## Read in the dataset
childcare_costs <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-09/childcare_costs.csv')
counties <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-09/counties.csv')
# state level shapefiles (see function documentation to customize)
st_shape <- tigris::states()
# county level shapefiles (see function documentation to customize)
county_shape <- tigris::counties(
# state = [FIPS code of state that you want as a string, or vector of #state codes]
)
## Select the variables related to unemployment rate and year
unemp_vars <- childcare_costs %>%
select(county_fips_code, study_year, contains('unr'))
## Clean the data
tidy_unemp <- unemp_vars %>%
pivot_longer(
cols = !(county_fips_code | study_year),
names_to = c("gender", "age_category"),
names_sep = "_",
values_to = "rate"
) %>%
# Recode the gender values
mutate(
gender = recode(
gender, unr = "Overall", funr = "Female", munr = "Male"
),
age_category = recode(
age_category, `16` = "16 and over", `20to64` = "20 to 64"
)
)
## Append state name
tidy_unemp_state <- tidy_unemp %>%
inner_join(counties) %>%
select(-c(county_name, state_abbreviation))
vec_avg_by_gender_age <- tidy_unemp_state %>%
group_by(study_year, gender, age_category) %>%
summarize(gender_age_avg_unem = mean(rate))
unem_by_gender <- vec_avg_by_gender_age %>%
# group by study_year and age_category
group_by(study_year, age_category) %>%
# calculate the unem gap between genders
summarize(
unem_gap_gender = gender_age_avg_unem[gender == "Male"] - gender_age_avg_unem[gender == "Female"]
)
write_csv(vec_avg_by_gender_age, 'Unemployment/vec_avg_by_gender_age.csv')
